create table public.perfil (
  id bigint generated by default as identity not null,
  created_at timestamp with time zone not null default now(),
  name text null,
  telefone text null,
  email text null,
  user_id uuid null,
  last_access_at timestamp with time zone null,
  avatar_url text null default 'https://img.freepik.com/vetores-gratis/circulo-azul-com-usuario-branco_78370-4707.jpg?semt=ais_hybrid&w=740'::text,
  estado text null,
  cidade text null,
  updated_at timestamp with time zone null default now(),
  constraint perfil_pkey primary key (id),
  constraint perfil_user_id_fkey foreign KEY (user_id) references auth.users (id)
) TABLESPACE pg_default;

create trigger update_perfil_updated_at BEFORE
update on perfil for EACH row
execute FUNCTION update_updated_at_column ();

create table public.lancamentos_diarios (
  id bigint generated by default as identity not null,
  data date not null,
  descricao text not null,
  valor numeric(12, 2) not null,
  categoria text null,
  tipo text not null,
  observacoes text null,
  created_at timestamp with time zone not null default timezone ('utc'::text, now()),
  updated_at timestamp with time zone not null default timezone ('utc'::text, now()),
  user_id uuid null,
  constraint lancamentos_diarios_pkey primary key (id),
  constraint lancamentos_diarios_user_id_fkey foreign KEY (user_id) references auth.users (id) on update CASCADE on delete CASCADE,
  constraint lancamentos_diarios_tipo_check check (
    (
      tipo = any (array['receita'::text, 'despesa'::text])
    )
  )
) TABLESPACE pg_default;